Resources:
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      # AccessControl: PublicRead
      BucketName: !Sub ${self:service}-${self:provider.stage}-${AWS::AccountId}
      PublicAccessBlockConfiguration: 
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
                  
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
    DeletionPolicy: Retain
  S3BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: 'PublicReadGetObject'
            Effect: 'Allow'
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join
              - ''
              - - !GetAtt S3Bucket.Arn
                - '/*'
# *********************************************************** Rest API Gateway ***********************************************************
  Products:
    Type: AWS::ApiGateway::RestApi
    Properties: 
      Name: !Sub ${self:service}-${self:provider.stage}-products
  ProductsDeployment: 
    Type: AWS::ApiGateway::Deployment
    DependsOn: Method
    Properties: 
      RestApiId: !Ref Products
      StageName: main
  ProductsUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    DependsOn: ProductsDeployment
    Properties: 
      ApiStages:
        - ApiId: !Ref Products
          Stage: main
      UsagePlanName: !Sub ${self:service}-${self:provider.stage}-products-usage-plan

  MethodExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Principal:
                Service: apigateway.amazonaws.com
              Action: "sts:AssumeRole"
  Method:
    DependsOn: MethodExecutionRole
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Credentials: !GetAtt MethodExecutionRole.Arn
        Type: AWS
        Uri: !Join  
          - ''
          - - 'arn:aws:apigateway:us-west-2:lambda:path//2015-03-31/functions/'
            - !Sub arn:aws:lambda:${self:provider.region}:${AWS::AccountId}:function:${self:service}-${self:provider.stage}-test
            - '/invocations'
      ResourceId: !GetAtt Products.RootResourceId
      RestApiId: !Ref Products


Outputs:
  WebsiteURL:
    Value: !GetAtt 
      - S3Bucket
      - WebsiteURL
    Description: URL for website hosted on S3
  S3BucketSecureURL:
    Value: !Join 
      - ''
      - - 'https://'
        - !GetAtt 
          - S3Bucket
          - DomainName
    Description: Name of S3 bucket to hold website content
    